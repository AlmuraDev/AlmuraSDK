buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge-repo'
            url = 'http://files.minecraftforge.net/maven/'
        }
        maven {
            name = 'sonatype-nexus'
            url = 'https://oss.sonatype.org/content/repositories/public/'
        }
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.0'
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

defaultTasks 'licenseFormat', 'build', 'install'

apply plugin: 'forge'
apply plugin: 'license'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.almuradev'
archivesBaseName = 'almurasdk'

ext.name = 'AlmuraSDK'
ext.inceptionYear = '2015'
ext.packaging = 'jar'
ext.url = 'http://github.com/AlmuraDev/AlmuraSDK'
ext.organization = 'AlmuraDev'
ext.minecraftVersion = '1.7.10'
ext.forgeVersion = '10.13.4.1448'
ext.sdkVersion = '1'
version = minecraftVersion + '-' + forgeVersion.substring(forgeVersion.size() - 4) + '-' + sdkVersion + '-SNAPSHOT'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'sonatype-nexus'
        url = 'https://oss.sonatype.org/content/repositories/public/'
    }
    maven {
        name = 'sponge-public'
        url = 'http://repo.spongepowered.org/maven/'
    }
}

minecraft {
    version = project.ext.minecraftVersion + '-' + project.ext.forgeVersion + '-1.7.10'
    mappings = 'stable_12'
    runDir = "run/"
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    compile 'com.flowpowered:flow-math:1.0.2-SNAPSHOT'
    compile 'net.malisis:malisiscore:1.7.10-0.12.10-SNAPSHOT:dev'
    compile 'ninja.leaping.configurate:configurate-yaml:1.2'
    compile('org.inspirenxe:simplesave:1.3.0-SNAPSHOT') {
        transitive = true
    }
    compile 'org.spongepowered:mixin:0.1-SNAPSHOT'
    compile 'org.yaml:snakeyaml:1.15'
}

shadowJar {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'net/minecraftforge/**'
    dependencies {
        include(dependency('com.alta189:simplesave:1.3.0-SNAPSHOT'))
        include(dependency('com.flowpowered:flow-math'))
        include(dependency('com.h2database:h2:1.4.188'))
        include(dependency('mysql:mysql-connector-java:5.1.36'))
        include(dependency('ninja.leaping.configurate:configurate-yaml'))
        include(dependency('ninja.leaping.configurate:configurate-core'))
        include(dependency('org.xerial:sqlite-jdbc:3.8.11.1'))
        include(dependency('org.yaml:snakeyaml'))
    }
    classifier = ''
}

reobf.dependsOn shadowJar

processResources {
    inputs.property "version", version
    inputs.property "mcversion", project.minecraft.version

    from 'LICENSE.txt'
}

license {
    ext.name = project.name
    ext.organization = project.organization
    ext.url = project.url
    ext.year = project.inceptionYear
    sourceSets = project.sourceSets
    header file('HEADER.txt')
    ignoreFailures true
    strictCheck true
    includes(["**/*.java"])
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

def defaultEncoding = 'UTF-8'
compileJava {
    options.compilerArgs += [
            '-Xlint:all',
            '-Xlint:-path',
            '-Xlint:-processing'
    ]
    options.deprecation = true
    options.encoding = defaultEncoding
}

javadoc {
    options.encoding = defaultEncoding
}

def manifestEntries = [
        "Built-By"                   : System.properties['user.name'],
        "Created-By"                 : System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        "Implementation-Title"       : name,
        "Implementation-Version"     : version,
        "Implementation-Vendor"      : url,
        "FMLCorePlugin"              : "com.almuradev.almurasdk.core.AlmuraSDKCoreMod",
        "FMLCorePluginContainsFMLMod": 'true'
]

jar {
    manifest.mainAttributes(manifestEntries)
}

task sourceJar(type: Jar, dependsOn: sourceMainJava) {
    from "build/sources/java"
    from "build/resources/main/java"
    classifier = "sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = "javadoc"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = "dev"
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        // disable the crazy super-strict doclint tool in Java 8
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

artifacts {
    archives sourceJar
    archives javadocJar
    archives deobfJar
}

uploadArchives {
    repositories.mavenDeployer {
        if (version.endsWith('-SNAPSHOT')) {
            ext.sonatypeUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
        } else {
            ext.sonatypeUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'

            signing {
                required {isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives")}

                sign configurations.archives

                beforeDeployment {
                    org.gradle.api.artifacts.maven.MavenDeployment deployment -> signing.signPom(deployment)
                }
            }
        }

        repository(url: sonatypeUrl) {
            authentication(userName: System.getenv("sonatypeUsername"), password: System.getenv("sonatypePassword"))
        }

        pom.project {
            name name
            artifactId archivesBaseName
            packaging packaging
            inceptionYear inceptionYear
            url url
            description description

            scm {
                connection 'scm:git:git://github.com/AlmuraDev/AlmuraSDK.git'
                developerConnection 'scm:git:ssh://git@github.com:AlmuraDev/AlmuraSDK.git'
                url 'https://github.com/AlmuraDev/AlmuraSDK'
            }

            licenses {
                license {
                    name 'The MIT License'
                    url 'http://www.tldrlegal.com/license/mit-license'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'Zidane'
                    name 'Chris Sanders'
                    email 'zidane@outlook.com'
                }
                developer {
                    id 'Grinch'
                    name 'Steven Downer'
                    email 'grinch@outlook.com'
                }
                developer {
                    id 'Dockter'
                    name 'Mike Howe'
                    email 'dockter@almuramc.com'
                }
            }

            organization {
                name organization
                url url
            }

            issueManagement {
                system 'github'
                url 'https://github.com/AlmuraDev/AlmuraSDK/issues'
            }
        }
    }
}
